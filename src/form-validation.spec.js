describe('angular-bootstrap-form-validation', function() {
	beforeEach(module('ui.bootstrap.validation'));

	function setup (html) {
		var container;
		inject(function($compile, $rootScope) {
			container = $compile(html)($rootScope);
			$rootScope.$apply();
		});
		return container;
	}

	describe('uiValidationErrorMessages', function() {
		it('should thrown an error if used outside a form', function() {
			expect(function() {
				setup('<span ui-validation-error-messages></span>');
			}).toThrow();
		});

		it('should thrown an error if an input/select/textarea was not found', function() {
			expect(function() {
				setup('<form><span ui-validation-error-messages></span></form>');
			}).toThrow();
		});

		it('should not thrown an error if properly configured', function() {
			expect(function() {
				setup('<form><input name="model"><span ui-validation-error-messages></span></form>');
			}).not.toThrow();
		});

		it('should have an error message container', function() {
			var form = setup('<form><input name="model"><span ui-validation-error-messages></span></form>');

			var validationsContainer = form.find('div');
			expect(validationsContainer.hasClass('ui-validation')).toBe(true);
			expect(validationsContainer.hasClass('help-block')).toBe(true);
		});

		it('should show validation error for a required input', function() {
			var form = setup('<form><input name="model" ng-model="model" required><span ui-validation-error-messages></span></form>');

			var validations = form.find('small');
			expect(validations.length).toBe(1);
			expect(validations.text()).toBe('This field cannot be blank ');
		});

		it('should show validation errors for input fields generated by ng-repeat');
	});

	describe('uiValidationSubmit', function() {
		it('should prevent form submit in the presence of validation errors');
		it('should allow form submit when no validation errors have been found');
	});

	describe('uiValidationShowErrors', function() {
		it('should throw an error when ui-validation-submit cannot be found in DOM hierarchy');
		it('should only show validation errors after the first form submit');
	});
});
